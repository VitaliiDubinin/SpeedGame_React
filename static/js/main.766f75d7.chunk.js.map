{"version":3,"sources":["assets/02 Story.flac","assets/01. Sega Intro.flac","assets/briefcase-lock-1.wav","Circle.js","Button.js","circles.js","Gameover.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Circle","props","react_default","a","createElement","style","pointerEvents","disabled","className","concat","active","onClick","click","Button","type","children","circles","Gameover","message","score","close","clickSound","Audio","startSound","startMussic","stopSound","stopMusic","getRndInteger","min","max","Math","floor","random","App","state","current","showGameOver","level","mcircles","slice","_this","pace","rounds","gameOn","timer","undefined","clickPlay","paused","play","currentTime","startPlay","clickHandler","i","console","log","setState","nextCircle","stopHandler","nextActive","RL","setTimeout","levelHandler","gameLelel","startHandler","loop","pause","clearTimeout","closeHandler","window","location","reload","_this2","this","src_Button","map","_","src_Circle","key","id","src_Gameover","Component","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.766f75d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/02 Story.559602ef.flac\";","module.exports = __webpack_public_path__ + \"static/media/01. Sega Intro.2017d0cd.flac\";","module.exports = __webpack_public_path__ + \"static/media/briefcase-lock-1.4946111d.wav\";","import React from \"react\";\n\nconst Circle = (props) => {\n  return (\n    <div style={{ pointerEvents: props.disabled ? \"auto\" : \"\" }} className={`circle ${props.active ? \"active\" : \"\"}`} onClick={props.click}>\n      {/* {props.id} */}\n    </div>\n  );\n};\n\nexport default Circle;\n","import React from \"react\";\n\nconst Button = (props) => {\n  return (\n    <button type={props.type || \"button\"} onClick={props.click} className={props.className}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","export const circles = [0, 0, 0, 0, 0, 0, 0, 0];\n// export const circles = [0, 0, 0, 0];\n// export const circles = [\n//   { id: 1, color: \"red\" },\n//   { id: 2, color: \"blue\" },\n//   { id: 3, color: \"green\" },\n//   { id: 4, color: \"magenta\" },\n// ];\n","import React from \"react\";\n\nconst Gameover = (props) => {\n  let message = \"\";\n  if (props.score <= 50) {\n    message = \"Y can do better\";\n  } else if (props.score >= 51 || props.score <= 100) {\n    message = \"It,s GOOD!\";\n  } else {\n    message = \"WOW!\";\n  }\n  return (\n    <div className=\"overlay\">\n      <div className=\"gameover_box\">\n        <h2>GAME OVER</h2>\n        <p>Score was: {props.score} </p>\n        <p>{message}</p>\n        <button onClick={props.close}>X</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Gameover;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Circle from \"./Circle\";\nimport Button from \"./Button\";\nimport { circles } from \"./circles.js\";\nimport Gameover from \"./Gameover\";\n\nimport startMussic from \"./assets/02 Story.flac\";\nimport stopMusic from \"./assets/01. Sega Intro.flac\";\nimport click from \"./assets/briefcase-lock-1.wav\";\n\nconst clickSound = new Audio(click);\nconst startSound = new Audio(startMussic);\nconst stopSound = new Audio(stopMusic);\n\nconst getRndInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nclass App extends Component {\n  state = {\n    score: 0,\n    current: -1,\n    showGameOver: false,\n    level: 4,\n    mcircles: circles.slice(0, this.level),\n    pace: 1500,\n    rounds: 0,\n    gameOn: false,\n    // showStopBut: false,\n    // showStartBut: true,\n  };\n\n  timer = undefined;\n\n  clickPlay = () => {\n    if (clickSound.paused) {\n      clickSound.play();\n    } else {\n      clickSound.currentTime = 0;\n    }\n  };\n\n  startPlay = () => {\n    if (startSound.paused) {\n      startSound.play();\n    } else {\n      startSound.currentTime = 0;\n    }\n  };\n\n  clickHandler = (i) => {\n    clickSound.play();\n    this.clickPlay();\n    if (this.state.current !== i) {\n      this.setState({ score: this.state.score - 1 });\n      // this.stopHandler();\n      return;\n    }\n\n    console.log(\"clickHandler, circle nummber:\", i);\n    this.setState({\n      score: this.state.score + 1,\n      // rounds: this.state.rounds - 1,\n      // it give possibilities to \"collect\" mistakes through game\n      rounds: -1,\n    });\n  };\n\n  nextCircle = () => {\n    if (this.state.rounds >= 5) {\n      // how many \"mistakes\" we can do before stop game automatically\n      this.stopHandler();\n      return;\n    }\n\n    let RL = this.state.level - 1;\n    let nextActive;\n\n    do {\n      nextActive = getRndInteger(0, RL);\n    } while (nextActive === this.state.current);\n\n    this.setState({\n      current: nextActive,\n      pace: this.state.pace * 0.95,\n      rounds: this.state.rounds + 1,\n    });\n    console.log(\"rounds\", this.state.rounds);\n    console.log(\"active circle:\", this.state.current);\n\n    // this.timer = setTimeout(this.nextCircle, 1000);\n    this.timer = setTimeout(this.nextCircle, this.state.pace);\n  };\n\n  levelHandler = (gameLelel) => {\n    this.setState({\n      level: gameLelel,\n      circles: circles.slice(0, gameLelel),\n    });\n    // console.log(\"levelHandler result:\", this.state.level);\n    // console.log(gameLelel, circles.slice(0, gameLelel));\n  };\n\n  startHandler = () => {\n    startSound.play();\n    startSound.loop = true;\n    this.nextCircle();\n    this.setState({ gameOn: true });\n  };\n\n  stopHandler = () => {\n    startSound.pause();\n    stopSound.play();\n    clearTimeout(this.timer);\n    this.setState({ showGameOver: true, gameOn: false, rounds: 0 });\n  };\n\n  closeHandler = () => {\n    window.location.reload();\n    this.setState({ showGameOver: false, score: 0, current: -1 });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Speedgame</h1>\n        <h1>\n          level:\n          <Button className=\"level low\" click={() => this.levelHandler(4)}>\n            Low\n          </Button>\n          <Button className=\"level middle\" click={() => this.levelHandler(6)}>\n            Middle\n          </Button>\n          <Button className=\"level high\" click={() => this.levelHandler(8)}>\n            High\n          </Button>\n        </h1>\n        <h2>Your score:{this.state.score}</h2>\n        <div className=\"circles\">\n          {circles.slice(0, this.state.level).map((_, i) => (\n            <Circle key={i} id={i} click={() => this.clickHandler(i)} active={this.state.current === i} disabled={this.state.gameOn} />\n          ))}\n        </div>\n        <div>\n          {!this.state.gameOn && <Button click={this.startHandler}>START</Button>}\n          {this.state.gameOn && <Button click={this.stopHandler}>STOP</Button>}\n        </div>\n\n        {this.state.showGameOver && <Gameover close={this.closeHandler} score={this.state.score} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//   {circles.map((circle, i) => (\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./MargIndex.css\";\n// import App from \"./MargApp\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}